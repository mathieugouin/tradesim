# Refer to
# https://about.codecov.io/blog/python-code-coverage-using-github-actions-and-codecov/
# https://docs.github.com/en/actions/guides/building-and-testing-python
# https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
#
# Examples:
# https://github.com/nedbat/coveragepy/blob/master/.github/workflows/coverage.yml

name: "Python Build"

on: [push, pull_request]

jobs:
  build:
    name: "Build - Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        os:
          - ubuntu-20.04  # Fix OS version to have old python availability
          #- ubuntu-latest
          #- macos-latest
          #- windows-latest
        python-version:
          #- "2.7"
          #- "3.6"
          - "3.8"
          - "3.10"
      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v4"
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "List package versions"
        run: |
          python -m pip list

      - name: "Lint with flake8"
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: "Pre-Test setup"
        run: |
          mkdir -p stock_db/empty
          mkdir -p stock_db/empty2
          mkdir -p stock_db/bad
          touch stock_db/bad/BAD.csv
          # Append coverage (-a)
          python -m coverage run -a get_yahoo_finance_data.py --concurrent 1 --file stock_db/test.txt --dir ./stock_db/test --startdate 20100101 --verbose

      # Append coverage (-a)
      # -r...  # show all except regular pass
      # https://docs.pytest.org/en/7.4.x/how-to/output.html
      - name: "Execute tests with coverage"
        run: |
          python -m coverage run -a -m pytest -v -rfEsxXP --strict-markers

      # Append coverage (-a)
      - name: "Additional utilities execution"
        run: |
          python -m coverage run -a dl_validation.py
          python -m coverage run -a playground.py
          python -m coverage run -a update_stock_lists.py

      - name: "Display coverage report"
        run: |
          python -m coverage report

      #- name: "Show all files"
      #  run: |
      #    ls -lAR --group-directories-first

      - name: "Rename coverage"
        run: |
          mv .coverage .coverage.${{ matrix.python-version }}.${{ matrix.os }}

      # https://github.com/actions/upload-artifact
      - name: "Upload coverage data to github"
        uses: "actions/upload-artifact@v3"
        with:
          name: "Coverage"
          path: .coverage.*
          retention-days: 5  # Default is 90 days.


  upload:
    name: "Upload coverage - Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    needs: build
    runs-on: "${{ matrix.os }}"

    strategy:
      # IMPORTANT: matrix need to match build matrix
      matrix:
        os:
          - ubuntu-20.04  # Fix OS version to have old python availability
          #- ubuntu-latest
          #- macos-latest
          #- windows-latest
        python-version:
          #- "2.7"
          #- "3.6"
          - "3.8"
          - "3.10"
      # No need to continue if one upload failed.
      fail-fast: true

    steps:
      # Required for codecov script to confirm which commit.
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v4"
        with:
          python-version: ${{ matrix.python-version }}

      # python coverage module required for codecov upload
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install coverage

      # https://github.com/actions/download-artifact
      - name: "Download coverage data from github"
        uses: "actions/download-artifact@v3"
        with:
          name: "Coverage"

      - name: "Keep only current report"
        run: |
          mv .coverage.${{ matrix.python-version }}.${{ matrix.os }} .coverage
          rm -f .coverage.*

      - name: "Show all files"
        run: |
          ls -lA --group-directories-first

      # Refer to: https://about.codecov.io/security-update/
      - name: "List environment"
        run: |
          env

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3"
        with:
          #public repo, so token is irrelevant, but to try to help with failed upload
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          #files: ./coverage1.xml,./coverage2.xml # optional
          #flags: unittests # optional
          #name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)


  # Last final step to depend on all previous jobs.
  # This "dummy" step will be used to trigger on branch merging rule.
  # It will avoid having to change the rules all the time when changing python or os versions.
  finalize:
    name: "All jobs completed"
    needs: upload
    runs-on: ubuntu-latest

    steps:
      - name: "Print success"
        run: |
          echo All CI Jobs completed.
