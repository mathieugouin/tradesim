# Refer to
# https://about.codecov.io/blog/python-code-coverage-using-github-actions-and-codecov/
# https://docs.github.com/en/actions/guides/building-and-testing-python
#
# Examples:
# https://github.com/nedbat/coveragepy/blob/master/.github/workflows/coverage.yml

name: "Python Build"

on: [push, pull_request]

jobs:
  build:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        os:
          - ubuntu-latest
          #- macos-latest
          #- windows-latest
        python-version:
          - "2.7"
          - "3.6"
          #- "3.9"
      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v2"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "Lint with flake8"
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: "Test setup"
        run: |
          mkdir -p stock_db/empty
          mkdir -p stock_db/empty2
          mkdir -p stock_db/bad
          touch stock_db/bad/BAD.csv
          python get_yahoo_finance_data.py --concurrent 1 --file stock_db/test.txt --dir ./stock_db/test --startdate 20100101 --verbose

#      - name: "Execute tests"
#        run: |
#          python -m pytest -v

      - name: "Execute tests with coverage"
        run: |
          coverage run -m pytest -v

      - name: "Display coverage report"
        run: |
          coverage report

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          #token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          #files: ./coverage1.xml,./coverage2.xml # optional
          #flags: unittests # optional
          #name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          #verbose: true # optional (default = false)

      - name: "Show all files"
        run: |
          ls -lAR --group-directories-first

      - name: "Display coverage.xml"
        run: |
          if [ -f coverage.xml ]; then cat coverage.xml; fi
